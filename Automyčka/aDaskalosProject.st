<?xml version="1.0"?>

<st-source>
<time-stamp>From VisualWorks® NonCommercial, 7.4.1 of May 30, 2006 on April 30, 2023 at 8:00:50 pm</time-stamp>


<class>
<name>Osoba</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>jmeno prijmeni </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Osoba class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#prijmeni -&gt; Core.String); add: (#jmeno -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Osoba</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="jmeno">jmeno
"generated by Daskalos"

     ^jmeno</body>

<body package="DaskalosUserClasses" selector="jmeno:">jmeno: anObject
"generated by Daskalos"

     jmeno := (self checkValue: anObject forVariable: #jmeno)</body>

<body package="DaskalosUserClasses" selector="prijmeni">prijmeni
"generated by Daskalos"

     ^prijmeni</body>

<body package="DaskalosUserClasses" selector="prijmeni:">prijmeni: anObject
"generated by Daskalos"

     prijmeni := (self checkValue: anObject forVariable: #prijmeni)</body>
</methods>

<methods>
<class-id>Osoba</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     jmeno := nil.
     prijmeni := nil.
</body>
</methods>


<class>
<name>Zakaznik</name>
<environment>Smalltalk</environment>
<super>Osoba</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>auto sluzba psc pobocka </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Zakaznik class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#sluzba -&gt; Core.Object); add: (#jmeno -&gt; Core.String); add: (#pobocka -&gt; Core.Object); add: (#prijmeni -&gt; Core.String); add: (#psc -&gt; Core.Number); add: (#auto -&gt; Core.Object); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Zakaznik</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="auto">auto
"generated by Daskalos"

     ^auto</body>

<body package="DaskalosUserClasses" selector="auto:">auto: anObject
"generated by Daskalos"

     auto := (self checkValue: anObject forVariable: #auto)</body>

<body package="DaskalosUserClasses" selector="pobocka">pobocka
"generated by Daskalos"

     ^pobocka</body>

<body package="DaskalosUserClasses" selector="pobocka:">pobocka: anObject
"generated by Daskalos"

     pobocka := (self checkValue: anObject forVariable: #pobocka)</body>

<body package="DaskalosUserClasses" selector="psc">psc
"generated by Daskalos"

     ^psc</body>

<body package="DaskalosUserClasses" selector="psc:">psc: anObject
"generated by Daskalos"

     psc := (self checkValue: anObject forVariable: #psc)</body>

<body package="DaskalosUserClasses" selector="sluzba">sluzba
"generated by Daskalos"

     ^sluzba</body>

<body package="DaskalosUserClasses" selector="sluzba:">sluzba: anObject
"generated by Daskalos"

     sluzba := (self checkValue: anObject forVariable: #sluzba)</body>
</methods>

<methods>
<class-id>Zakaznik</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     auto := nil.
     sluzba := nil.
     psc := nil.
     pobocka := nil.
</body>
</methods>

<methods>
<class-id>Zakaznik</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="kolikZaplatil">kolikZaplatil
	| cenaSluzby |
	cenaSluzby := 0.
	sluzba typ = 'Budget' 
		ifTrue: [cenaSluzby := 500]
		ifFalse: 
			[sluzba typ = 'Classic' 
				ifTrue: [cenaSluzby := 800]
				ifFalse: 
					[sluzba typ = 'Premium' 
						ifTrue: [cenaSluzby := 1200]
						ifFalse: [sluzba typ = 'Ultra Premium' ifTrue: [cenaSluzby := 1500]]]].
	auto karoserie = 'SUV' 
		ifTrue: [cenaSluzby := cenaSluzby * 1.2]
		ifFalse: 
			[auto karoserie = 'Kombi' 
				ifTrue: [cenaSluzby := cenaSluzby * 1.1]
				ifFalse: [auto karoserie = 'Dodávka' ifTrue: [cenaSluzby := cenaSluzby * 1.3]]].
	^cenaSluzby</body>
</methods>


<class>
<name>Zamestnanec</name>
<environment>Smalltalk</environment>
<super>Osoba</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>uvazek datumnastupu pobocka </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Zamestnanec class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#prijmeni -&gt; Core.String); add: (#datumnastupu -&gt; Core.Date); add: (#jmeno -&gt; Core.String); add: (#uvazek -&gt; Core.String); add: (#pobocka -&gt; Core.Object); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Zamestnanec</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="datumnastupu">datumnastupu
"generated by Daskalos"

     ^datumnastupu</body>

<body package="DaskalosUserClasses" selector="datumnastupu:">datumnastupu: anObject
"generated by Daskalos"

     datumnastupu := (self checkValue: anObject forVariable: #datumnastupu)</body>

<body package="DaskalosUserClasses" selector="pobocka">pobocka
"generated by Daskalos"

     ^pobocka</body>

<body package="DaskalosUserClasses" selector="pobocka:">pobocka: anObject
"generated by Daskalos"

     pobocka := (self checkValue: anObject forVariable: #pobocka)</body>

<body package="DaskalosUserClasses" selector="uvazek">uvazek
"generated by Daskalos"

     ^uvazek</body>

<body package="DaskalosUserClasses" selector="uvazek:">uvazek: anObject
"generated by Daskalos"

     uvazek := (self checkValue: anObject forVariable: #uvazek)</body>
</methods>

<methods>
<class-id>Zamestnanec</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     uvazek := nil.
     datumnastupu := nil.
     pobocka := nil.
</body>
</methods>

<methods>
<class-id>Zamestnanec</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="mzda">mzda
	| dobazamestnani zaklad |
	dobazamestnani := Date today year * 12 + Date today monthIndex 
				- (datumnastupu year * 12 + datumnastupu monthIndex).
	zaklad := uvazek = 'Hlavni' ifTrue: [25000] ifFalse: [10000].
	dobazamestnani &gt;= 12 ifTrue: [zaklad := zaklad * 1.035].
	dobazamestnani &gt;= 24 ifTrue: [zaklad := zaklad * 1.07].
	dobazamestnani &gt;= 36 ifTrue: [zaklad := zaklad * 1.1].
	^dobazamestnani &lt; 12 ifTrue: [zaklad] ifFalse: [zaklad rounded]</body>
</methods>


<class>
<name>Pobocka</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>psc mesto id </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Pobocka class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#mesto -&gt; Core.String); add: (#id -&gt; Core.Number); add: (#psc -&gt; Core.Number); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Pobocka</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="id">id
"generated by Daskalos"

     ^id</body>

<body package="DaskalosUserClasses" selector="id:">id: anObject
"generated by Daskalos"

     id := (self checkValue: anObject forVariable: #id)</body>

<body package="DaskalosUserClasses" selector="mesto">mesto
"generated by Daskalos"

     ^mesto</body>

<body package="DaskalosUserClasses" selector="mesto:">mesto: anObject
"generated by Daskalos"

     mesto := (self checkValue: anObject forVariable: #mesto)</body>

<body package="DaskalosUserClasses" selector="psc">psc
"generated by Daskalos"

     ^psc</body>

<body package="DaskalosUserClasses" selector="psc:">psc: anObject
"generated by Daskalos"

     psc := (self checkValue: anObject forVariable: #psc)</body>
</methods>

<methods>
<class-id>Pobocka</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     psc := nil.
     mesto := nil.
     id := nil.
</body>
</methods>

<methods>
<class-id>Pobocka</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="vydelek">vydelek
	| trzby |
	trzby := Dictionary new.
	Pobocka allInstances do: 
			[:pobocka | 
			| zakaznici trzba |
			zakaznici := Zakaznik allInstances 
						select: [:zakaznik | zakaznik pobocka = pobocka].
			trzba := zakaznici inject: 0
						into: [:suma :zakaznik | suma + zakaznik kolikZaplatil].
			trzby at: pobocka id put: trzba].
	^trzby at: id</body>
</methods>


<class>
<name>Sluzba</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>typ cena </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Sluzba class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#typ -&gt; Core.String); add: (#cena -&gt; Core.Number); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Sluzba</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="cena">cena
"generated by Daskalos"

     ^cena</body>

<body package="DaskalosUserClasses" selector="cena:">cena: anObject
"generated by Daskalos"

     cena := (self checkValue: anObject forVariable: #cena)</body>

<body package="DaskalosUserClasses" selector="typ">typ
"generated by Daskalos"

     ^typ</body>

<body package="DaskalosUserClasses" selector="typ:">typ: anObject
"generated by Daskalos"

     typ := (self checkValue: anObject forVariable: #typ)</body>
</methods>

<methods>
<class-id>Sluzba</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     typ := nil.
     cena := nil.
</body>
</methods>


<class>
<name>Auto</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>karoserie spotrebavody spotrebamydla </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Auto class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#spotrebamydla -&gt; Core.Number); add: (#karoserie -&gt; Core.String); add: (#spotrebavody -&gt; Core.Number); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Auto</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="karoserie">karoserie
"generated by Daskalos"

     ^karoserie</body>

<body package="DaskalosUserClasses" selector="karoserie:">karoserie: anObject
"generated by Daskalos"

     karoserie := (self checkValue: anObject forVariable: #karoserie)</body>

<body package="DaskalosUserClasses" selector="spotrebamydla">spotrebamydla
"generated by Daskalos"

     ^spotrebamydla</body>

<body package="DaskalosUserClasses" selector="spotrebamydla:">spotrebamydla: anObject
"generated by Daskalos"

     spotrebamydla := (self checkValue: anObject forVariable: #spotrebamydla)</body>

<body package="DaskalosUserClasses" selector="spotrebavody">spotrebavody
"generated by Daskalos"

     ^spotrebavody</body>

<body package="DaskalosUserClasses" selector="spotrebavody:">spotrebavody: anObject
"generated by Daskalos"

     spotrebavody := (self checkValue: anObject forVariable: #spotrebavody)</body>
</methods>

<methods>
<class-id>Auto</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     karoserie := nil.
     spotrebavody := nil.
     spotrebamydla := nil.
</body>
</methods>


</st-source>
